service cloud.firestore {
  match /databases/{database}/documents {
  	match /posts/{postId} {
			allow read;
      allow create: 
      if request.auth.uid != null && 
      request.auth.uid == request.resource.data.author && 
      exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
      exists(/databases/$(database)/documents/topics/$(request.resource.data.topic)) && 
      request.resource.data.author is string && 
      request.resource.data.topic is string && 
      request.resource.data.content is string && 
      (request.resource.data.reply == null || request.resource.data.reply is string);
      // TODO: check user isnt disabled
    }
    
    match /votes/{voteId} {
			allow read;
      allow delete: // TODO: check post user == request user
      if request.auth.uid != null &&
      exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow write, create: 
      if request.auth.uid != null &&
      request.auth.uid == request.resource.data.user &&
      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
      request.resource.data.positive is bool &&
      request.resource.data.post is string &&
      request.resource.data.user is string;
      // TODO: only one vote per user per post
    }
    
    match /users/{userId} {
    	allow read;
      allow update: if request.auth.uid == userId && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.indexOf('moderator') > -1;
    }
    
    match /topics/{topic} {
    	allow read;
    }
  }
}
